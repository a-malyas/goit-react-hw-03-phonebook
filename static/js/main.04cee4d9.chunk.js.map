{"version":3,"sources":["components/Contacts/ContactList.module.css","components/Form/Form.js","components/Contacts/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Form","name","number","onSubmit","nameInputId","numberInputId","onChange","className","styles","htmlFor","type","pattern","title","required","value","id","ContactList","contacts","onRemove","map","onClick","Filter","App","state","filter","uuidv4","addContacts","contact","setState","handleChangeFilter","handleChange","e","currentTarget","handleSubmit","preventDefault","some","alert","reset","prevState","changeFilter","deleteContact","contactId","contactsArr","localStorage","getItem","parsedContactsArr","JSON","parse","this","prevProps","setItem","stringify","normalizedFilter","toLowerCase","filteredContacts","includes","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04cee4d9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact-list\":\"ContactList_contact-list__3sYH7\",\"contact-list-item\":\"ContactList_contact-list-item__3R_hL\",\"contact-list-text\":\"ContactList_contact-list-text__imthe\",\"contact-list-button\":\"ContactList_contact-list-button__1gQWg\"};","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './Form.module.css';\r\n\r\nconst Form = ({name, number, onSubmit, nameInputId, numberInputId, onChange}) => (\r\n    \r\n    <form className='form' onSubmit={onSubmit}>\r\n        <label className={styles['label']} htmlFor={nameInputId}>Name</label>\r\n        <input className={styles['input']}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={onChange}\r\n            id={nameInputId}>\r\n        </input>\r\n        <label className='label' htmlFor={numberInputId}>Number</label>\r\n        <input className='input'\r\n             type=\"text\"\r\n             name=\"number\"\r\n             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n             title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n             required\r\n             value={number}\r\n             onChange={onChange}\r\n             id={numberInputId}>\r\n        </input>\r\n                            \r\n        <button type='submit'>Add contact</button>\r\n    </form>\r\n);\r\n\r\nForm.propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    onSubmit: PropTypes.func,\r\n    nameInputId: PropTypes.string,\r\n    numberInputId: PropTypes.string,\r\n    onChange: PropTypes.func\r\n};\r\n\r\nexport default Form;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({contacts, onRemove}) => (\r\n    <ul className={styles['contact-list']}>\r\n        {contacts.map(({ id, name, number }) => (\r\n            <li className={styles['contact-list-item']} key={id} name={name} number={number}>\r\n                <p className={styles['contact-list-text']}>{name}: {number}</p>\r\n                <button className={styles['contact-list-button']} type=\"button\" onClick={() => onRemove(id)}>Delete</button>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n    \r\n);\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array,\r\n    onRemove: PropTypes.func\r\n}\r\n\r\nexport default ContactList;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n <div>\r\n    <label>Find contacts by name</label>\r\n    <input type=\"text\" value={value} onChange={onChange}></input>\r\n   </div> \r\n);\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func\r\n}\r\n\r\nexport default Filter;","import React, { Component } from 'react';\nimport './App.css';\nimport 'modern-normalize/modern-normalize.css';\nimport Form from './components/Form/Form';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactList from './components/Contacts/ContactList';\nimport Filter from './components/Filter/Filter';\n\nclass App extends Component {\n  state = {\n        contacts: [],\n        name: '',\n        number: '',\n        filter: ''\n    };\n    nameInputId = uuidv4();\n    numberInputId = uuidv4();\n    \n    addContacts = (name, number) => {\n        const contact = {\n            id: uuidv4(),\n            name,\n            number,\n        };\n\n        this.setState(({ contacts }) => ({\n            contacts: [contact, ...contacts],\n        }));\n    };\n    handleChangeFilter = filter => {\n        this.setState({ filter });\n    };\n        \n    handleChange = (e) => {\n        const { name, value } = e.currentTarget;\n        this.setState({ [name]: value });\n    };\n    handleSubmit = (e) => {\n      e.preventDefault();\n      if (this.state.contacts.some(({ name }) => name === this.state.name)) {\n      alert(`${this.state.name} is already in contacts.`);\n      this.reset();\n      return;\n    };\n        this.setState(prevState => {\n            return {\n                contacts: [...prevState.contacts, { name: prevState.name, number: prevState.number, id: uuidv4() }]\n            }\n        });\n        this.reset();\n    };\n    reset = () => {\n        this.setState({ name: '', number: '' });\n    };\n    changeFilter = e => {\n        this.setState({filter: e.currentTarget.value});\n    }\n    deleteContact = contactId => {\n      this.setState(prevState => ({\n        contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n      }));\n    };\n    componentDidMount() {\n        const contactsArr = localStorage.getItem('contacts');\n        const parsedContactsArr = JSON.parse(contactsArr);\n        if (parsedContactsArr) {\n            this.setState({ contacts: parsedContactsArr });\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.contacts !== prevState.contacts) {\n            localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n        }\n    }\n\n    render() {\n        const { filter } = this.state;\n        const normalizedFilter = this.state.filter.toLowerCase();\n        const filteredContacts = this.state.contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n        return (\n          <div>\n            <h1>Phonebook</h1>\n            <Form\n              name={this.state.name}\n              number={this.state.number}\n              onSubmit={this.handleSubmit}\n              nameInputId={this.nameInputId}\n              numberInputId={this.numberInputId}\n              onChange={this.handleChange}/>\n            <h1 className='contacts-title'>Contacts</h1>\n            <Filter value={filter} onChange={this.changeFilter}/>\n            <ContactList contacts={filteredContacts} name={this.name} number={this.number} onRemove={this.deleteContact}/>\n            </div>\n        );\n    };\n};\n  \n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}